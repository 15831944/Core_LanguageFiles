<Window x:Class="ModPlusLanguageCreator.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ModPlusLanguageCreator"
        xmlns:models="clr-namespace:ModPlusLanguageCreator.Models"
        xmlns:helpers="clr-namespace:ModPlusLanguageCreator.Helpers"
        xmlns:properties="clr-namespace:ModPlusLanguageCreator.Properties"
        mc:Ignorable="d" WindowStartupLocation="CenterScreen"
        ResizeMode="CanResizeWithGrip" 
        Title="ModPlus language creator" Height="650" Width="900"
        d:DataContext="{d:DesignInstance d:Type=local:MainViewModel, IsDesignTimeCreatable=False}"
        KeyDown="MainWindow_OnKeyDown">
    <Window.Resources>
        <Style x:Key="TreeViewItemFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <PathGeometry x:Key="TreeArrow" Figures="M0,0 L0,6 L6,0 z"/>
        <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}" >
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Width" Value="16"/>
            <Setter Property="Height" Value="16"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Width="16" Height="16" Background="Transparent" Padding="5,5,5,5">
                            <Path x:Name="ExpandPath" Fill="Transparent" Stroke="#FF989898" Data="{StaticResource TreeArrow}">
                                <Path.RenderTransform>
                                    <RotateTransform Angle="135" CenterX="3" CenterY="3"/>
                                </Path.RenderTransform>
                            </Path>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Stroke" TargetName="ExpandPath" Value="#FF1BBBFA"/>
                                <Setter Property="Fill" TargetName="ExpandPath" Value="Transparent"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="RenderTransform" TargetName="ExpandPath">
                                    <Setter.Value>
                                        <RotateTransform Angle="180" CenterX="3" CenterY="3"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Fill" TargetName="ExpandPath" Value="#FF595959"/>
                                <Setter Property="Stroke" TargetName="ExpandPath" Value="#FF262626"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="StretchTreeViewItemStyle" TargetType="{x:Type TreeViewItem}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Padding" Value="0,0,0,0"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeViewItem}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition MinWidth="19" Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <ToggleButton x:Name="Expander"  Style="{StaticResource ExpandCollapseToggleStyle}" ClickMode="Press" VerticalAlignment="Top"
                                          IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Border x:Name="Bd" SnapsToDevicePixels="true" Grid.Column="1" Grid.ColumnSpan="2" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                                <ContentPresenter x:Name="PART_Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" ContentSource="Header"/>
                            </Border>
                            <ItemsPresenter x:Name="ItemsHost" Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="1"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="false">
                                <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="HasItems" Value="false">
                                <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter Property="Background" TargetName="Bd" Value="AliceBlue"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                    <Condition Property="IsSelectionActive" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="MistyRose"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- control styles -->
        <Style TargetType="{x:Type TextBlock}">
            <Setter Property="VerticalAlignment" Value="Center"></Setter>
            <Setter Property="Margin" Value="2"></Setter>
        </Style>
        <Style TargetType="{x:Type TextBox}">
            <Setter Property="VerticalAlignment" Value="Center"></Setter>
            <Setter Property="Margin" Value="2"></Setter>
            <Setter Property="Padding" Value="2"></Setter>
        </Style>
        <Style TargetType="{x:Type ComboBox}">
            <Setter Property="VerticalAlignment" Value="Center"></Setter>
            <Setter Property="Margin" Value="2"></Setter>
        </Style>
        <Style TargetType="{x:Type TreeView}">
            <Setter Property="Margin" Value="2"></Setter>
        </Style>
        <Style TargetType="{x:Type Button}">
            <Setter Property="Padding" Value="5 2"></Setter>
            <Setter Property="Margin" Value="2"></Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"></ColumnDefinition>
            <ColumnDefinition Width="*"></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
        </Grid.RowDefinitions>
        <Grid Grid.Row="0" Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
            </Grid.RowDefinitions>
            <TextBlock Grid.Row="0" Text="Source language" FontSize="14"></TextBlock>
            <ComboBox Grid.Row="1" ItemsSource="{Binding Path=LanguagesForMain}"
                      Width="150" 
                      SelectedItem="{Binding Path=CurrentMainLanguageFile}">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock>
                            <Run Text="{Binding Path=DisplayName, Mode=OneWay}"></Run>
                            <Run Text="["></Run>
                            <Run Text="{Binding Path=Name, Mode=OneWay}"></Run>
                            <Run Text="]"></Run>
                        </TextBlock>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
            <TextBlock Grid.Row="2" TextAlignment="Center">
                <Run Text="Language file version:"></Run>
                <LineBreak/>
                <Run Text="{Binding Path=MainLanguage.Version}" FontSize="20"></Run>
            </TextBlock>
        </Grid>
        <!-- main language -->
        <TreeView Grid.Column="1" Grid.Row="0" ItemsSource="{Binding Path=MainLanguage.Nodes}"
                  x:Name="TvMainLanguage" Grid.IsSharedSizeScope="True"
                  ItemContainerStyle="{StaticResource StretchTreeViewItemStyle}"
                  ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                  HorizontalContentAlignment="Stretch">
            <TreeView.ItemTemplate>
                <HierarchicalDataTemplate DataType="{x:Type models:NodeModel}"
                                          ItemsSource="{Binding Path=Items}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"></RowDefinition>
                            <RowDefinition Height="Auto"></RowDefinition>
                        </Grid.RowDefinitions>
                        <TextBlock Text="{Binding Path=NodeName}" FontSize="14" Foreground="DarkBlue"></TextBlock>
                        <!-- attributes -->
                        <Expander Grid.Row="1" HorizontalContentAlignment="Stretch"
                                  ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                  Visibility="{Binding Path=AttributesVisibility}"
                                  IsExpanded="{Binding Path=IsExpanded, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                  Header="Attributes">
                            <ListBox Grid.IsSharedSizeScope="True"
                                     ItemsSource="{Binding Path=Attributes}"
                                     HorizontalContentAlignment="Stretch"
                                     ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" SharedSizeGroup="Name"></ColumnDefinition>
                                                <ColumnDefinition Width="*"></ColumnDefinition>
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Grid.Column="0" Text="{Binding Path=Name}" VerticalAlignment="Center" Margin="1,1,3,1"></TextBlock>
                                            <TextBox Grid.Column="1" Text="{Binding Path=Value}" IsReadOnly="{Binding Path=IsReadOnly}"
                                                     TextWrapping="Wrap"></TextBox>
                                        </Grid>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </Expander>
                    </Grid>
                    <HierarchicalDataTemplate.ItemTemplate>
                        <DataTemplate DataType="{x:Type models:ItemModel}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="Tag"></ColumnDefinition>
                                    <ColumnDefinition Width="*"></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <TextBlock Text="{Binding Path=Tag}" Foreground="Gray" VerticalAlignment="Center" Margin="2,2,5,2"></TextBlock>
                                <TextBox Grid.Column="1" Text="{Binding Path=Value}"
                                         BorderThickness="1" BorderBrush="LightGray"></TextBox>
                            </Grid>
                        </DataTemplate>
                    </HierarchicalDataTemplate.ItemTemplate>
                </HierarchicalDataTemplate>
            </TreeView.ItemTemplate>
        </TreeView>
        <!-- missing values -->
        <Grid Grid.Row="1" Grid.Column="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <TextBlock Grid.Row="0" Grid.Column="0" Text="Missing attributes:" VerticalAlignment="Center" Margin="2"></TextBlock>
            <TextBox Grid.Row="0" Grid.Column="1" Margin="2" Text="{Binding Path=MissingAttributes.Count, Mode=OneWay}"
                     IsReadOnly="True"></TextBox>
            <Button Grid.Row="0" Grid.Column="2" x:Name="BtGoToFirstMissingAttribute" Content="Go to first" Margin="2"
                    Padding="5 2"
                    Click="BtGoToFirstMissingAttribute_OnClick"></Button>
            <TextBlock Grid.Row="0" Grid.Column="3" Text="Missing items:" VerticalAlignment="Center" Margin="10,2,2,2"></TextBlock>
            <TextBox Grid.Row="0" Grid.Column="4" Margin="2" Text="{Binding Path=MissingItems.Count, Mode=OneWay}"
                     IsReadOnly="True"></TextBox>
            <Button Grid.Row="0" Grid.Column="5" x:Name="BtGoToFirstMissingItem" Content="Go to first" Margin="2"
                    Padding="5 2"
                    Click="BtGoToFirstMissingItem_OnClick"></Button>
            <TextBlock Grid.Row="0" Grid.Column="6" Text="Items with special symbols (\n,{0}, etc):"></TextBlock>
            <TextBox Grid.Row="0" Grid.Column="7" Margin="2" IsReadOnly="True"
                     Text="{Binding Path=MissingItemsWithSpecialSymbols.Count, Mode=OneWay}"></TextBox>
            <Button Grid.Row="0" Grid.Column="8" x:Name="BtGoToFirstItemWithSpecialSymbol" Content="Go to first" Margin="2"
                    Padding="5 2" Click="BtGoToFirstItemWithSpecialSymbol_OnClick"></Button>
        </Grid>
        <!-- work language -->
        <Grid Grid.Row="2" Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
            </Grid.RowDefinitions>
            <TextBlock Grid.Row="0" Text="Target language" FontSize="14"></TextBlock>
            <ComboBox Grid.Row="1" ItemsSource="{Binding Path=LanguagesForWork}"
                      Width="150" x:Name="CbWorkLanguages"
                      SelectedItem="{Binding Path=CurrentWorkLanguageFile}">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock>
                            <Run Text="{Binding Path=DisplayName, Mode=OneWay}"></Run>
                            <Run Text="["></Run>
                            <Run Text="{Binding Path=Name, Mode=OneWay}"></Run>
                            <Run Text="]"></Run>
                        </TextBlock>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
            <Button Grid.Row="2" Margin="2" Content="Create new language file" 
                    Command="{Binding Path=CreateNewLanguageFileCommand}"></Button>
            <TextBlock Grid.Row="3" TextAlignment="Center">
                <Run Text="Completion of translation:"></Run>
                <LineBreak/>
                <Run Text="{Binding Path=TranslationComplition, StringFormat=N3}"
                     FontSize="20"></Run>
                <Run Text="%" FontSize="20"></Run>
            </TextBlock>
            <TextBlock Grid.Row="4" Margin="2" Text="Set language file version:"></TextBlock>
            <TextBox Grid.Row="5" Margin="2" FontSize="20">
                <TextBox.Text>
                    <Binding Path="WorkLanguage.Version"
                             Mode="TwoWay"
                             UpdateSourceTrigger="PropertyChanged"
                             ValidatesOnNotifyDataErrors="True"
                             ValidatesOnDataErrors="True"
                             NotifyOnValidationError="True">
                        <Binding.ValidationRules>
                            <helpers:VersionValidationRule ValidatesOnTargetUpdated="True"></helpers:VersionValidationRule>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            
            
            <Button Grid.Row="7" Content="Save language to file" Margin="2"
                    x:Name="BtSave" Click="BtSave_OnClick"></Button>
        </Grid>
        <!-- work language -->
        <TreeView Grid.Column="1" Grid.Row="2" ItemsSource="{Binding Path=WorkLanguage.Nodes}"
                  x:Name="TvWorkLanguage" Grid.IsSharedSizeScope="True"
                  ItemContainerStyle="{StaticResource StretchTreeViewItemStyle}"
                  ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                  HorizontalContentAlignment="Stretch">
            <TreeView.ItemTemplate>
                <HierarchicalDataTemplate DataType="{x:Type models:NodeModel}"
                                          ItemsSource="{Binding Path=Items}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"></RowDefinition>
                            <RowDefinition Height="Auto"></RowDefinition>
                        </Grid.RowDefinitions>
                        <TextBlock Text="{Binding Path=NodeName}" FontSize="14" Foreground="DarkBlue"></TextBlock>
                        <!-- attributes -->
                        <Expander Grid.Row="1" HorizontalContentAlignment="Stretch"
                                  ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                  Visibility="{Binding Path=AttributesVisibility}"
                                  IsExpanded="{Binding Path=IsExpanded, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                  Header="Attributes">
                            <ListBox Grid.IsSharedSizeScope="True"
                                     ItemsSource="{Binding Path=Attributes}"
                                     HorizontalContentAlignment="Stretch"
                                     ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" SharedSizeGroup="Name"></ColumnDefinition>
                                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                                                <ColumnDefinition Width="*"></ColumnDefinition>
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Grid.Column="0" Text="{Binding Path=Name}" VerticalAlignment="Center" Margin="1,1,3,1"></TextBlock>
                                            <Button Grid.Column="1" Content="Translate" Command="{Binding Path=TranslateCommand}">
                                                <Button.Style>
                                                    <Style>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}},
                                                                Path=IsSelected, FallbackValue=False}" Value="True">
                                                                <Setter Property="Button.IsEnabled" Value="True"></Setter>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}},
                                                                Path=IsSelected, FallbackValue=False}" Value="False">
                                                                <Setter Property="Button.IsEnabled" Value="False"></Setter>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Button.Style>
                                            </Button>
                                            <CheckBox Grid.Column="2" VerticalAlignment="Center" Margin="2"
                                                      ToolTip="This value same in Source Main Language"
                                                      ToolTipService.InitialShowDelay="0"
                                                      IsChecked="{Binding Path=IsSameWithCurrentMainLanguage, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></CheckBox>
                                            <TextBox Grid.Column="3" Text="{Binding Path=Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                     IsReadOnly="{Binding Path=IsReadOnly}"
                                                     TextWrapping="Wrap" x:Name="TbAttribute"
                                                     GotFocus="TbAttribute_OnGotFocus"
                                                     KeyDown="TbAttribute_OnKeyDown"></TextBox>
                                        </Grid>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </Expander>
                    </Grid>
                    <HierarchicalDataTemplate.ItemTemplate>
                        <DataTemplate DataType="{x:Type models:ItemModel}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="Tag"></ColumnDefinition>
                                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                                    <ColumnDefinition Width="*"></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <TextBlock Text="{Binding Path=Tag}" Foreground="Gray" VerticalAlignment="Center" Margin="1,1,5,1"></TextBlock>
                                <Button Grid.Column="1" Margin="1" Content="Transale"
                                        Command="{Binding Path=TranslateCommand}">
                                    <Button.Style>
                                        <Style>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TreeViewItem}}, FallbackValue=False}"
                                                             Value="True">
                                                    <Setter Property="Button.IsEnabled" Value="True"></Setter>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TreeViewItem}}, FallbackValue=False}"
                                                             Value="False">
                                                    <Setter Property="Button.IsEnabled" Value="False"></Setter>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>
                                <CheckBox Grid.Column="2" Margin="2" VerticalAlignment="Center"
                                          ToolTip="This value same in Source Main Language"
                                          ToolTipService.InitialShowDelay="0"
                                          IsChecked="{Binding Path=IsSameWithCurrentMainLanguage, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></CheckBox>
                                <TextBox Grid.Column="3" Text="{Binding Path=Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                         x:Name="TbItemValue" Margin="1" BorderThickness="1" BorderBrush="LightGray"
                                         GotFocus="TbItemValue_OnGotFocus"
                                         KeyDown="TbItemValue_OnKeyDown"></TextBox>
                            </Grid>
                        </DataTemplate>
                    </HierarchicalDataTemplate.ItemTemplate>
                </HierarchicalDataTemplate>
            </TreeView.ItemTemplate>
        </TreeView>
        <!-- Hot keys -->
        <Expander Grid.Column="1" Grid.Row="3" Header="Hot keys">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                </Grid.RowDefinitions>
                <TextBlock Grid.Column="0" Grid.Row="0" Text="Translate Attribute or Item (when TextBox is focused):"></TextBlock>
                <TextBlock Grid.Column="1" Grid.Row="0" Text="Ctrl +"></TextBlock>
                <ComboBox Grid.Column="2" Grid.Row="0" MinWidth="50"
                          ItemsSource="{Binding Source={x:Static helpers:Constants.Keys}}"
                          SelectedItem="{Binding Source={x:Static properties:Settings.Default}, Path=HotKeys_Translate}"
                          SelectionChanged="HotKeysComboBoxes_OnSelectionChanged"></ComboBox>
                <TextBlock Grid.Column="0" Grid.Row="1" Text="Go to first missing attribute:"></TextBlock>
                <TextBlock Grid.Column="1" Grid.Row="1" Text="Ctrl +"></TextBlock>
                <ComboBox Grid.Column="2" Grid.Row="1"
                          ItemsSource="{Binding Source={x:Static helpers:Constants.Keys}}"
                          SelectedItem="{Binding Source={x:Static properties:Settings.Default}, Path=HotKeys_GoToAttribute}"
                          SelectionChanged="HotKeysComboBoxes_OnSelectionChanged"></ComboBox>
                <TextBlock Grid.Column="0" Grid.Row="2" Text="Go to first missing item:"></TextBlock>
                <TextBlock Grid.Column="1" Grid.Row="2" Text="Ctrl +"></TextBlock>
                <ComboBox Grid.Column="2" Grid.Row="2"
                          ItemsSource="{Binding Source={x:Static helpers:Constants.Keys}}"
                          SelectedItem="{Binding Source={x:Static properties:Settings.Default}, Path=HotKeys_GoToItem}"
                          SelectionChanged="HotKeysComboBoxes_OnSelectionChanged"></ComboBox>
                <TextBlock Grid.Column="0" Grid.Row="3" Text="Go to first missing item with special symbol:"></TextBlock>
                <TextBlock Grid.Column="1" Grid.Row="3" Text="Ctrl +"></TextBlock>
                <ComboBox Grid.Column="2" Grid.Row="3"
                          ItemsSource="{Binding Source={x:Static helpers:Constants.Keys}}"
                          SelectedItem="{Binding Source={x:Static properties:Settings.Default}, Path=HotKeys_GoToSymbol}"
                          SelectionChanged="HotKeysComboBoxes_OnSelectionChanged"></ComboBox>
            </Grid>
        </Expander>
        <TextBlock Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="2" VerticalAlignment="Center">
            <Run Text="Copyright © ModPlus"></Run>
            <Hyperlink Click="Hyperlink_OnClick">modplus.og</Hyperlink>
        </TextBlock>
    </Grid>
</Window>
